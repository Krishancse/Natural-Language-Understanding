import torch
from transformers import GPT2LMHeadModel, GPT2Tokenizer

# Load pre-trained GPT-2 model and tokenizer
model_name = "gpt2-medium"  # You can choose different model sizes
tokenizer = GPT2Tokenizer.from_pretrained(model_name)
model = GPT2LMHeadModel.from_pretrained(model_name)

# Set the model to evaluation mode
model.eval()

# Function to generate text from a given prompt
def generate_text(prompt, max_length=100, temperature=0.7):
    # Encode the prompt to tensor
    input_ids = tokenizer.encode(prompt, return_tensors="pt")

    # Generate text
    output = model.generate(input_ids, max_length=max_length, num_return_sequences=1,
                           no_repeat_ngram_size=2, top_k=50, top_p=0.95, temperature=temperature)

    # Decode and return the generated text
    generated_text = tokenizer.decode(output[0], skip_special_tokens=True)
    return generated_text

# Interactive text generation
print("Welcome to the Text Generation Chatbot!")
while True:
    prompt = input("You: ")
    if prompt.lower() == 'exit':
        print("Chatbot: Goodbye!")
        break
    generated_text = generate_text(prompt)
    print("Chatbot: Generated Text:")
    print(generated_text)
